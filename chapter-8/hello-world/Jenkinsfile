pipeline {
    agent {
        kubernetes {
            // Use a label to distinguish this pod template
            inheritFrom 'agent'
            yaml '''
apiVersion: v1
kind: Pod
metadata:
  # Note: The name and possibly namespace for the Pod should be added here.
  name: ci-pod
  namespace: pga-cicdpoc-ta
spec:
  containers:
    - name: node
      image: devops.digital.belgium.be:1443/jenkins-node:latest
      command:
        - sleep
      args:
        - 9h

    - name: kaniko
      image: devops.digital.belgium.be:1443/jenkins-executor:debug
      command:
        - sleep
      args:
        - 9h
      volumeMounts:
        - name: kaniko-secret
          mountPath: /kaniko/.docker

  restartPolicy: Never
  
  volumes:
    - name: kaniko-secret
      secret:
        secretName: nexus-credentials
        items:
          - key: .dockerconfigjson
            path: config.json
            '''
        }
    }

    stages {
         stage('Build and Publish Docker Images') {
            parallel {
                stage('Frontend') {
                    steps {
                        container(name: 'kaniko', shell: '/busybox/sh') {
                            sh '''#!/busybox/sh
                                VERSION=$(grep '"version":' ./chapter-8/hello-world/backend/package.json | head -1 | awk -F: '{ print $2 }' | sed 's/[", ]//g')
                                /kaniko/executor --context ./chapter-8/hello-world/frontend --dockerfile=Dockerfile --insecure --skip-tls-verify --insecure-registry nexus-pga-cicdpoc-ta.apps.bosa-dt-04.paas.cloud.dt.bosa.fgov.be --skip-tls-verify-registry nexus-pga-cicdpoc-ta.apps.bosa-dt-04.paas.cloud.dt.bosa.fgov.be --destination=nexus-pga-cicdpoc-ta.apps.bosa-dt-04.paas.cloud.dt.bosa.fgov.be/lab-frontend:$VERSION-$BUILD_NUMBER --image-name-with-digest-file=frontend-image-file
                            '''
                        }
                    }
                }

                stage('Backend') {
                    steps {
                        container(name: 'kaniko', shell: '/busybox/sh') {
                            sh '''#!/busybox/sh
                                VERSION=$(grep '"version":' ./chapter-8/hello-world/backend/package.json | head -1 | awk -F: '{ print $2 }' | sed 's/[", ]//g')
                                /kaniko/executor --context ./chapter-8/hello-world/backend --dockerfile=Dockerfile --insecure --skip-tls-verify --insecure-registry nexus-pga-cicdpoc-ta.apps.bosa-dt-04.paas.cloud.dt.bosa.fgov.be --skip-tls-verify-registry nexus-pga-cicdpoc-ta.apps.bosa-dt-04.paas.cloud.dt.bosa.fgov.be --destination=nexus-pga-cicdpoc-ta.apps.bosa-dt-04.paas.cloud.dt.bosa.fgov.be/lab-backend:$VERSION-$BUILD_NUMBER --image-name-with-digest-file=backend-image-file
                            '''
                        }
                    }
                }
            }
        }

        stage('Publish build info') {
            steps {
                rtCreateDockerBuild (
                    serverId: 'Default Server',
                    sourceRepo: 'docker-local',
                    kanikoImageFile: "frontend-image-file"
                )
                rtCreateDockerBuild (
                    serverId: 'Default Server',
                    sourceRepo: 'docker-local',
                    kanikoImageFile: "backend-image-file"
                )
                rtPublishBuildInfo (
                    serverId: 'Default Server'
                )
            }
        } 
    }
}